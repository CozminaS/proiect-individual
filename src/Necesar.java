
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Dictionary;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Cozmina
 */
public class Necesar extends javax.swing.JFrame {

    /**
     * Creates new form Necesar
     */
    public Necesar() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        meniuCaini3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        meniuCaini4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jPanel1.setBackground(new java.awt.Color(204, 134, 87));
        jPanel1.setPreferredSize(new java.awt.Dimension(845, 900));

        jPanel3.setBackground(new java.awt.Color(246, 237, 217));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo.PNG"))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe Print", 1, 30)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 51, 0));
        jLabel4.setText("Necesar");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(137, 137, 137)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(250, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        meniuCaini3.setBackground(new java.awt.Color(34, 28, 14));
        meniuCaini3.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        meniuCaini3.setForeground(new java.awt.Color(255, 130, 0));
        meniuCaini3.setText("Afiseaza Necesar");
        meniuCaini3.setFocusable(false);
        meniuCaini3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meniuCaini3ActionPerformed(evt);
            }
        });

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nume", "NumarBucati"
            }
        ));
        jScrollPane2.setViewportView(tabel);

        meniuCaini4.setBackground(new java.awt.Color(34, 28, 14));
        meniuCaini4.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        meniuCaini4.setForeground(new java.awt.Color(255, 130, 0));
        meniuCaini4.setText("Inapoi");
        meniuCaini4.setFocusable(false);
        meniuCaini4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meniuCaini4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(meniuCaini4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(meniuCaini3, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(meniuCaini3)
                        .addGap(284, 284, 284)
                        .addComponent(meniuCaini4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(387, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 784, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 657, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void meniuCaini3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meniuCaini3ActionPerformed
        // TODO add your handling code here:
        afis();
       

        tabel.removeAll();
    }//GEN-LAST:event_meniuCaini3ActionPerformed

    private void meniuCaini4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meniuCaini4ActionPerformed
        // TODO add your handling code here:
        dispose();
        InterfataAdmin i= new InterfataAdmin();
        i.setVisible(true);
    }//GEN-LAST:event_meniuCaini4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Necesar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Necesar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Necesar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Necesar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Necesar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton meniuCaini3;
    private javax.swing.JButton meniuCaini4;
    private javax.swing.JTable tabel;
    // End of variables declaration//GEN-END:variables

public  void afis(){
    int pretTotal=0;
       Map<String, Integer> produse;
        produse = new Hashtable<>();
     DefaultTableModel tblModel = (DefaultTableModel) tabel.getModel();
            //add string array data into jtbale
            tblModel.setRowCount(0);
    Connection dbconn= ConectareDB.connectDB();
    if(dbconn != null){
    try{
     PreparedStatement st=(PreparedStatement)
                    dbconn.prepareStatement("select * from produs where nrBuc<150 and nrBuc>-9000");   
            
            
           ResultSet res= st.executeQuery();
            while(res.next())
            {
                
               
                  produse.put(res.getString("id"), 150);
            }
          
              // JOptionPane.showMessageDialog(this, "Datele despre comenzi  ","Suces",JOptionPane.INFORMATION_MESSAGE);
    
    }catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Conectare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    
}
    
    
    if(dbconn != null){
    try{
     PreparedStatement sti=(PreparedStatement)
                    dbconn.prepareStatement("select * from rezervari where status =1");   
            
            
           ResultSet resi= sti.executeQuery();
            while(resi.next())
            {
                Comanda comanda=new Comanda(Integer.parseInt(resi.getString("id")),Integer.parseInt(resi.getString("pret")),resi.getString("status"));
                
               comanda.setCumparatorID(resi.getString("cumparatorId"));
               comanda.setProduseID(resi.getString("produseId"));
                comanda.setBuc(resi.getString("nrBuc"));
              
                
                
                ArrayList<String> produ=Produs.listaIdProdus(comanda);
                ArrayList<String> bucati=Produs.listaBucProdus(comanda);
                for(int i=0;i<bucati.size();i++){
                System.out.println(bucati.get(i));}
               
                for (int i = 0; i < produ.size(); i++) {
                    if(produse.containsKey(produ.get(i))){
                    int nr=(produse.get(produ.get(i))+Integer.parseInt(bucati.get(i)));
                   // Produs produs= new Produs(Produs.cautaProdus(Integer.parseInt(produ.get(i))));
                   produse.put(produ.get(i),nr);
                    } 
                else{   produse.put(produ.get(i),Integer.parseInt(bucati.get(i)));
                    }  }
            //String array
             
            
           // DefaultTableModel tblModel = (DefaultTableModel) tabel.getModel();
            //add string array data into jtbale
           
            
            }
          Set<String> keys = produse.keySet();
        
        // Create a list from the Enumeration
      
              for(String key : keys) {
          String tbDta[] = {key,Produs.cautaNume(Integer.parseInt(key)).toString(),Integer.toString(produse.get(key))};
          
                           tblModel.addRow((tbDta));
        }
                JOptionPane.showMessageDialog(this, "Necesarul ","Suces",JOptionPane.INFORMATION_MESSAGE);
    
    }catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Conectare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }}
            String tbDta[] = {};
          
            tblModel.addRow((tbDta));
            
            
  
}

}
